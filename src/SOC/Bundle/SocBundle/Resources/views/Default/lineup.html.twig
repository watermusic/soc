{% extends 'SOCSocBundle::layout.html.twig' %}

{% block title %}
    {{ title }}
{% endblock %}

{% block stylesheets %}

    {{ parent() }}

    <style>

        .field {
            height: 800px;
            padding: 3%;
            background-color: #1ab394;
            position: relative;
        }

        .bench {

        }

        .bench ul {
            padding: 0;
        }

        .bench-item {
            float: left;
        }

        .bench-item > .pi, .field > .pi {
            width: 123px;
            margin: 0 9px 12px 0;
        }

        .bench-item .ibox-content, .field .ibox-content {
            padding: 0;
        }

        .bench-item .pi .player-desc, .field .pi .player-desc {
            padding: 7px;
        }

        .bench-item .btn-xs, .btn-group-xs > .btn {
            font-size: 9px;
        }
    </style>

{% endblock %}

{% block body %}

    <div id="wrapper">

    {% include 'SOCSocBundle:Default:navigation-main.html.twig' %}

    <div id="page-wrapper" class="gray-bg">

    {% include 'SOCSocBundle:Default:navigation-minor.html.twig' %}

    {% block content_header %}

        <div class="row wrapper border-bottom white-bg page-heading">
            <div class="col-lg-10">
                <h2>Dashboard</h2>
                <ol class="breadcrumb">
                    <li>
                        <a href="{{ path('soc_dashboard_index') }}">Home</a>
                    </li>
                    <li class="active">
                        <strong>Aufstellung</strong>
                    </li>
                </ol>
            </div>
            <div class="col-lg-2">

            </div>
        </div>

    {% endblock %}

    {% block content_main %}
        <div class="row wrapper wrapper-content animated fadeInRight">
            <div class="col-lg-7">

                <h4>Aufstellung</h4>

                <div class="field">
                </div>

            </div>
            <div class="col-lg-5">

                <div class="ibox bench">
                    <div class="ibox-content">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="m-b-md">
                                    <h2>Auswechselbank</h2>
                                </div>
                            </div>
                        </div>
                        <div class="row m-t-sm">
                            <div class="col-lg-12">
                                <div class="panel blank-panel">
                                    <div class="panel-heading">
                                        <div class="panel-options">
                                            <ul class="nav nav-tabs">

                                                {% for posName, players in positionenGroup %}

                                                <li class="{{ loop.index == 1 ? 'active' : '' }}"><a href="#tab-{{ loop.index }}" data-toggle="tab">{{ posName }}</a></li>

                                                {% endfor %}
                                            </ul>
                                        </div>
                                    </div>

                                    <div class="panel-body">

                                        <div class="tab-content">

                                            {% for posName, players in positionenGroup %}

                                            <div class="tab-pane{{ loop.index == 1 ? ' active' : '' }}" id="tab-{{ loop.index }}">

                                                <ul class="unstyled">
                                                    {% for player in players %}

                                                        <li class="bench-item">

                                                            <div class="ibox pi" data-ref="{{ player.id }}" data-value="{{ player|serialize }}">
                                                                <div class="ibox-content">

                                                                    <div class="player-imitation {{ player.team.name|lower }}">
                                                                        <img class="img-circle portrait" src="{{ player.thumbUrl}}">
                                                                    </div>
                                                                    <div class="player-desc">
                                                                        <small class="text-muted">{{ player.team}}</small>
                                                                        <a href="#" class="player-name">{{ player.name}}</a>
                                                                        <div class="small m-t-xs exchange">
                                                                            {% for position in positionen %}
                                                                                <a href="javascript:void(0);" class="btn btn-xs btn-{{ position.colorName }} btn-outline" data-position="{{ position.name }}">{{ position.shortcut }}</a>
                                                                            {% endfor %}
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </li>

                                                    {% endfor %}

                                                </ul>
                                            </div>

                                            {% endfor %}

                                        </div>

                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endblock %}

    {% block content_footer %}
        <div class="footer">
            <div class="pull-right">
                Yeah <strong>iii</strong>.
            </div>
            <div>
                <strong>Copyright</strong> S.O.C. &copy; 2014-2015
            </div>
        </div>
    {% endblock %}

    </div>
    </div>

{% endblock %}
{% block javascripts %}
    {{ parent() }}

    {% javascripts
    '@js_dashboard' %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}

    <script id="lineup-item" type="x-tmpl-mustache">
    {{ template|raw }}
    </script>
    <script>

        var SOC = SOC || {};

        $(function() {

            SOC.LineupStorage = (function () {

                var
                    CONST_TORWART       = 'Torwart',
                    CONST_ABWEHR        = 'Abwehr',
                    CONST_MITTELFELD    = 'Mittelfeld',
                    CONST_STURM         = 'Sturm',

                    storage = {},
                    limits = {};

                storage[CONST_TORWART] = [];
                storage[CONST_ABWEHR] = [];
                storage[CONST_MITTELFELD] = [];
                storage[CONST_STURM] = [];

                limits[CONST_TORWART] = 1;
                limits[CONST_ABWEHR] = 3;
                limits[CONST_MITTELFELD] = 5;
                limits[CONST_STURM] = 2;

                var isSpace = function(position) {
                    var n = limits[position];
                    return storage[position].length < n;
                };

                return {

                    init: function () {
                    },
                    add: function(position, playerId) {
                        if(isSpace(position) === false) {
                            return -1;
                        }

                        if(_.contains(storage[position], playerId)) {
                            return false;
                        }
                        storage[position].push(playerId);
                        return storage;
                    },
                    remove: function(playerId) {

                        var position = null;
                        _.each(storage, function(pos,positionName){
                            _.each(pos, function(id) {
                                if(id == playerId) {
                                    position = positionName;
                                }
                            });
                        });

                        if(position === null) {
                            return;
                        }

                        storage[position] = _.without(storage[position], playerId);
                        return storage;
                    },
                    has: function(position, playerId) {
                        return _.contains(storage[position], playerId);
                    },
                    get: function() {
                        return storage;
                    },
                    getFlatten : function() {
                        var
                            result = [],
                            m = 0;
                        _.each(limits, function(limit, position) {
                            for(var n = 0; n < limit; n++) {
                                result[m] = (_.isUndefined(storage[position][n])) ? null : storage[position][n];
                                m++;
                            }
                        });
                        return result;
                    },
                    set: function(lineup) {
                        storage = lineup;
                        return storage;
                    }

                };

            })();

            SOC.LineupCtrl = (function () {

                var field = $('.field'),
                    template = $('#lineup-item').html();


                return {

                    init: function () {

                        field.on('click', '.pi-lineup .exchange a', function() {
                            var lineupItem = $(this).parent().parent().parent().parent(),
                                playerId = lineupItem.data('ref');
                            SOC.LineupStorage.remove(playerId);
                            SOC.LineupCtrl.render();
                            SOC.BenchCtrl.showPlayer(playerId);
                        });

                    },
                    render: function() {

                        field.empty();
                        var lineup = SOC.LineupStorage.getFlatten();
                        _.each(lineup, function(num, index) {

                            if(num === null) {
                                return;
                            }

                            var playerData = SOC.BenchCtrl.getPlayerData(num);
                            if(_.isUndefined(playerData)) {
                                throw 'There is no player with the id' + num + ' on the bench';
                            }
                            playerData.index = index + 1;
                            playerData.team.lowerName = playerData.team.name.toLowerCase();

                            var rendered = Mustache.render(template, playerData);

                            field.append(rendered);


                        });

                    }

                };

            })();

            SOC.BenchCtrl = (function () {

                var bench = $('.bench'),
                    btnsAddPlayer = $('.bench-item .exchange a', bench);

                var getPlayerElement = function(playerId) {
                    return $("div[data-ref='" + playerId + "']", bench);
                };

                return {

                    init: function () {

                        btnsAddPlayer.on('click', function() {

                            var playerData = $(this).parent().parent().parent().parent().data('value'),
                                position = $(this).data('position');

                            var result = SOC.LineupStorage.add(position, playerData.id);
                            if(_.isObject(result) === false) {
                                toastr.warning('Das Spielfeld ist schon voll oder der Spieler steht schon auf dem Platz!', 'Achtung');
                                return;
                            }
                            SOC.LineupCtrl.render();
                            SOC.BenchCtrl.hidePlayer(playerData.id);

                        });

                    },
                    getPlayerData: function(playerId) {
                        return getPlayerElement(playerId).data('value');
                    },
                    showPlayer: function(playerId) {
                        return getPlayerElement(playerId).show(400);
                    },
                    hidePlayer: function(playerId) {
                        return getPlayerElement(playerId).hide(400);
                    }

                };

            })();

            SOC.MainCtrl = (function () {

                return {
                    init: function () {

                        toastr.options = {
                            "closeButton": true,
                            "debug": false,
                            "progressBar": true,
                            "positionClass": "toast-top-center",
                            "onclick": null,
                            "showDuration": "400",
                            "hideDuration": "1000",
                            "timeOut": "7000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        };

                        SOC.BenchCtrl.init();
                        SOC.LineupCtrl.init();
                    }
                };

            })();
            SOC.MainCtrl.init();

        });

    </script>

{% endblock %}